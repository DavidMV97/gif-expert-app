{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/Getgifs.js","hooks/useFetchGifs.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categ","type","value","onChange","target","GifGridItem","id","title","url","console","log","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","GifGrid","class","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAsCeA,EAnCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAENC,mBAAS,IAFH,mBAEnCC,EAFmC,KAEvBC,EAFuB,KAiB1C,OACC,0BAAMC,SAVc,SAACC,GACrBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAe,SAAAS,GAAK,OAAMP,GAAN,mBAAsBO,OAC1CN,EAAc,OAMd,2BACCO,KAAK,OACLC,MAAOT,EACPU,SAlBuB,SAACP,GAC1BF,EAAcE,EAAEQ,OAAOF,YCMVG,EAXK,SAAC,GAA4B,IAAzBC,EAAwB,EAAxBA,GAAKC,EAAmB,EAAnBA,MAAQC,EAAW,EAAXA,IAGpC,OADAC,QAAQC,IAAIJ,EAAKC,EAAOC,GAEvB,yBAAKG,UAAU,0CACd,yBAAKC,IAAKJ,EAAKK,IAAKN,IACpB,+BAAMA,EAAN,O,uBCOYO,EAhBF,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACTR,EADS,iDACuCS,UAAUF,GADjD,+DAEIG,MAAMV,GAFV,cAETW,EAFS,gBAGQA,EAAKC,OAHb,uBAGPC,EAHO,EAGPA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACNlB,GAAIkB,EAAIlB,GACRC,MAAOiB,EAAIjB,MACXC,IAAG,UAAEgB,EAAIC,cAAN,aAAE,EAAYC,iBAAiBlB,QATrB,kBAaRc,GAbQ,4CAAH,sDCwBEK,EAnBO,SAAEZ,GAAe,IAAD,EACRvB,mBAAS,CACrC6B,KAAM,GACNO,SAAS,IAH2B,mBAC7BC,EAD6B,KACrBC,EADqB,KAgBrC,OAVAC,qBAAU,WACTjB,EAASC,GACPiB,MAAM,SAAAC,GACNH,EAAS,CACRT,KAAMY,EACNL,SAAS,SAGV,CAAEb,IAEEc,GCeOK,EAhCC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,EAEEY,EAAcZ,GAApCU,EAFoB,EAEzBJ,KAAeO,EAFU,EAEVA,QAQvB,OACC,oCACC,gCAAMb,EAAN,KAEEa,GAAW,yBAAKO,MAAM,cAAa,8BAAW,+BAGhD,yBAAKxB,UAAU,aAEbc,EAAOF,KAAI,SAAAC,GAAG,OACb,kBAAC,EAAD,eACCY,IAAKZ,EAAIlB,IACLkB,UCMIa,EA3BM,WAAO,IAAD,EACU7C,mBAAS,CAAC,kBADpB,mBACnB8C,EADmB,KACP/C,EADO,KAQ1B,OACC,oCACC,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BAEE+C,EAAWf,KAAI,SAAAR,GAAQ,OACtB,kBAAC,EAAD,CACCqB,IAAKrB,EACLA,SAAWA,UClBlBwB,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.1f81bdc2.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types' ; \n\nconst AddCategory = ( {setcategories} ) => {\n\n\tconst [inputValue, setInputValue] = useState('');\n\n\tconst HandleInputChange = (e) => {\n\t\tsetInputValue(e.target.value);\n\t}\n\n\tconst HandleSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tif (inputValue.trim().length > 2) {\n\t\t\tsetcategories( categ => [ inputValue , ...categ ] ); \n\t\t\tsetInputValue(''); \n\t\t}\n\t}\n\n\treturn (\n\t\t<form onSubmit={HandleSubmit}>\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tvalue={inputValue}\n\t\t\t\tonChange={HandleInputChange}\n\t\t\t/>\n\t\t</form>\n\t)\n}\n\nAddCategory.propTypes = {\n\tsetcategories: PropTypes.func.isRequired\n}\n\n\n\n\nexport default AddCategory; ","import React from 'react';\n\n\nconst GifGridItem = ( { id , title , url } ) => {\n\n\tconsole.log(id , title, url) ; \n\treturn(\n\t\t<div className=\"card animate__animated animate__fadeIn\">\n\t\t\t<img src={url} alt={title} />\n\t\t\t<p> { title } </p>\n\t\t</div>\n\t)\n}\n\nexport default GifGridItem; ","const getGifs = async ( category ) => {\n\tconst url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=16&api_key=Bi6M21YYzQZL5ga2gRFqbne9d1cft3jo`\n\tconst resp = await fetch(url);\n\tconst { data } = await resp.json();\n\n\tconst gifs = data.map(img => {\n\t\treturn {\n\t\t\tid: img.id,\n\t\t\ttitle: img.title,\n\t\t\turl: img.images?.downsized_medium.url\n\t\t}\n\t})\n\t\n\treturn gifs; \n}\n\nexport default getGifs; \n\n","import { useState , useEffect } from 'react';\nimport getGifs from '../helpers/Getgifs'; \n\n\n\nconst useFetchGifs =  ( category ) => {\n\tconst [ state , setState ] = useState({\n\t\tdata: [],\n\t\tloading: true\n\t}); \n\n\tuseEffect(() => {\n\t\tgetGifs( category )\n\t\t\t.then( imgs => {\n\t\t\t\tsetState({\n\t\t\t\t\tdata: imgs,\n\t\t\t\t\tloading: false\n\t\t\t\t})\n\t\t\t}) \n\t}, [ category ])\n\n\treturn state\n}\n\nexport default useFetchGifs ;","import React, { useState, useEffect } from 'react';\nimport GifGridItem from './GifGridItem';\nimport useFetchGifs from '../hooks/useFetchGifs'; \n\nconst GifGrid = ({ category }) => {\n\t//const [images, setImages] = useState([]);\n\tconst { data:images ,  loading } = useFetchGifs( category ) ; \n\t/*\n\tuseEffect(() => {\n\t\tgetGifs( category )\n\t\t\t.then( setImages ); \n\t}, [ category ])*/\n\n\t\n\treturn (\n\t\t<>\n\t\t\t<h3> {category} </h3>\n\n\t\t\t{ loading && <div class=\"lds-ripple\"><div></div><div></div></div>}\n\n\t\t\t\n\t\t\t<div className=\"card-grid\">\n\t\t\t\t{\n\t\t\t\t\timages.map(img => (\n\t\t\t\t\t\t<GifGridItem\n\t\t\t\t\t\t\tkey={img.id}\n\t\t\t\t\t\t\t{...img}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t</div>\n\t\t</>\n\t)\n\n}\n\nexport default GifGrid; ","import React, { useState } from 'react';\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\n\nconst GifExpertApp = () => {\n\tconst [categories, setcategories] = useState(['dragon ball z']);\n\t/*\n\tconst handdleAdd = () => {\n\t\t//setcategories( [...categories , 'Hunter X Hunter'] )\n\t\tsetcategories(categ => [...categ , 'Hunter X Hunter'])\n\t}*/\n\n\treturn (\n\t\t<>\n\t\t\t<h2>GifExpertApp</h2>\n\t\t\t<AddCategory setcategories={setcategories} />\n\t\t\t<hr />\n\t\t\t<ol>\n\t\t\t\t{\n\t\t\t\t\tcategories.map(category => (\n\t\t\t\t\t\t<GifGrid \n\t\t\t\t\t\t\tkey={category} \n\t\t\t\t\t\t\tcategory={ category } \n\t\t\t\t\t\t/>\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t</ol>\n\t\t</>\n\t)\n}\n\nexport default GifExpertApp; ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp'; \n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}